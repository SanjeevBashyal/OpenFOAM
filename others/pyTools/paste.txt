import os
import os.path

def create_symlinks(source_folder, target_folder, subfolders_to_include):
    # Convert paths to absolute paths for accurate comparison
    source_folder = os.path.abspath(source_folder)
    target_folder = os.path.abspath(target_folder)

    # Ensure the target folder exists
    if not os.path.exists(target_folder):
        os.makedirs(target_folder)

    # Convert subfolders_to_include to absolute paths
    subfolders_to_include = [os.path.abspath(os.path.join(source_folder, subfolder)) for subfolder in subfolders_to_include]

    # Walk through the source folder
    for root, dirs, files in os.walk(source_folder):
        # Skip the target folder
        if os.path.abspath(root) == target_folder:
            continue

        # Check if the current directory is in the list of subfolders to include
        if os.path.abspath(root) not in subfolders_to_include:
            continue  # Skip this directory

        for file in files:
            # Get the full path of the source file
            source_file_path = os.path.join(root, file)
            
            # Use only the file name for the symlink
            symlink_name = file
            symlink_path = os.path.join(target_folder, symlink_name)
            
            # Handle conflicts if a file with the same name already exists
            if os.path.exists(symlink_path):
                print(f"Conflict: Symlink already exists for {symlink_name}. Skipping {source_file_path}")
                continue
            
            # Create the symbolic link
            os.symlink(source_file_path, symlink_path)
            print(f"Created symlink: {symlink_path} -> {source_file_path}")

# Example usage
source_folder = 'path/to/source/folder'
target_folder = 'lninclude'  # This is the directory to exclude from processing
subfolders_to_include = ['subfolder1', 'subfolder2', 'subfolder3']  # List of subfolders to include

create_symlinks(source_folder, target_folder, subfolders_to_include)